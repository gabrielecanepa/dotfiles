[alias]
  a = add
  aliases = !sh -c 'git config --get-regexp \"alias.*\" | sed \"s/alias.//\"' -
  br = branch
  ci = commit --interactive
  cm = commit -m
  co = !sh -c 'git checkout $@ && [[ ! $1 =~ ^-.*$ ]] && git show-ref --verify --quiet refs/heads/$1 && git branch --set-upstream-to=$1 $1 >/dev/null 2>&1 && git fetch' -
  df = diff
  ds = diff --stat -r
  fo = fetch origin
  get = !git pull --rebase && git submodule update --init --recursive
  template = !sh -c '[ -d $WORKING_DIR/dotfiles/.github ] && git init && cp -R $WORKING_DIR/dotfiles/.github . && mv .github/README_TEMPLATE.md README.md && mv .github/LICENSE . && git add . && git commit -m \"Initialize new repository\"  >/dev/null 2>&1' -
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  log = log --color
  pf = push -f --set-upstream
  pom = push origin master
  rebase-master = !git checkout master && git pull && git checkout - && git rebase -i master
  remote = remote -v
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
  st = status -sb
  sweep = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin
  undo = reset --hard
  unstage = reset HEAD --
  untrack = rm --cache --

[branch "master"]
  mergeoptions = --no-edit

[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = true

[color "branch"]
  current = green
  remote = yellow

[core]
  pager = less -FRSX

[filter "lfs"]
  clean = git-lfs clean -- %f
  process = git-lfs filter-process
  required = true
  smudge = git-lfs smudge -- %f

[help]
  autocorrect = 1

[pull]
  rebase = true
